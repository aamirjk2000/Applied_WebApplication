@page
@using System.Data
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.Extensions.Primitives
@*using static Applied_WebApplication.Data.TableValidationClass;*@
@using static Applied_WebApplication.Data.AppFunctions;
@model Applied_WebApplication.Pages.Accounts.CashBookModel
@{
    var UserName = User.Identity.Name;
    var UserData = new UserProfile(UserName);
    var CashCode = 1;
    var COATitles = Titles(UserName, Tables.COA, "Nature=" + CashCode.ToString());
    var NumFormat = GetUserValue(UserName, "CurrencyFormat");                                                     // Get format of Currency to display
    var DateFormat = GetUserValue(UserName, "DateFormat");                                                           // Get format of Number to Display
    var LedgerClass = new Ledger(UserName);                                                                                     // Create a Class for ledger style record.
    var Date1 = Model.MyParameters.MinDate.ToString("yyyy-MM-dd");
    var Date2 = Model.MyParameters.MaxDate.ToString("yyyy-MM-dd");
    Model.Cashbook = LedgerClass.Records;    // Get record from cashbook to ledger class [here return nill records]
    var AddRecord = Model.MyRecord;


    if (Model.MyParameters.IsSelected || Model.MyParameters.IsAdd)
    {
        LedgerClass.TableName = Tables.CashBook;
        LedgerClass.Date_From = DateTime.Parse(Date1);
        LedgerClass.Date_To = DateTime.Parse(Date2);
        LedgerClass.Sort = "Vou_Date";
        LedgerClass.Filter = string.Concat("BookID=", Model.MyParameters.CashBookID.ToString());
        Model.Cashbook = LedgerClass.Records;               // Fill cashbook as ledger style
        Model.MyParameters.RecordID = 0;
        AddRecord = new CashBookModel.BookRecord();
        //DataRow Row = GetDataRow(UserName, Tables.CashBook, Model.MyParameters.RecordID);               // Get New Row from cashbook Table.
    }
}

<style>
    #MyTable {
    overflow: auto;
    background-color: lightcyan
    }

    .orange{
    background: #f39c12
    }

    .blue{
    background: #4ee6ee
    }

    .align-right{
    text-align: right
    }



    }

</style>

<form method="post">
    <div class="container p-1 mt-2 mb-2 bg-info text-white rounded">

        <div class="p-2 d-inline-block w-25 text-primary">
            <label>CASH BOOK</label>
        </div>
        <div class="p-2 d-inline-block">

            <label for="From">From</label>
            <input type="date" name="MinDate" min="2020-01-01" value=@Date1 />
        </div>
        <div class="p-2 d-inline-block">
            <label for="To">To</label>
            <input type="date" name="MaxDate" min="2020-01-01" value=@Date2 />
        </div>
        <div class="p-2 d-inline-block">
            @if (Model.MyParameters.CashBookID > 0)
            {
                <button class=" btn btn-outline-primary" type="submit" name="Refresh"
                    asp-page-handler="Refresh">
                    REFRESH
                </button>
            }
        </div>
        <div class="p-2 d-inline-block float-end">
            <div class="dropdown">
                @{
                    string BookTitle = "Select...";
                }

                <button class="dropdown-toggle btn btn-primary"
                        type="button" data-bs-toggle="dropdown" aria-expanded="false">
                    @if (@Model.MyParameters.BookTitle.Length > 0)
                    {
                        @Model.MyParameters.BookTitle
                    }
                    else
                    {
                        @BookTitle
                    }

                </button>

                <ul class="dropdown-menu">
                    @foreach (KeyValuePair<int, string> _Key in COATitles)
                    {
                        <li>
                            <a class="dropdown-item" formmethod="get"
                           asp-route-id=@_Key.Key
                           asp-page-handler="Book">
                                @_Key.Value
                            </a>
                        </li>
                    }
                </ul>
            </div>
        </div>
        <div class="p-2 d-inline-block">
            <input hidden type="text" name="CashBookID" value="@Model.MyParameters.CashBookID" />                  <!--  Generate CashBookID i-->
            <input hidden type="text" name="BookTitle" value="@Model.MyParameters.BookTitle" />
        </div>

    </div>

    <!-- SHOW CASH BOOK RECORD -->
    <div>
        @if (Model.MyParameters.IsSelected)
        {
            <div>
                <table class="table" id="MyTable">
                    <thead>
                        <tr>
                            <th style="width:10%">Date</th>
                            <th style="width:10%">Vou No</th>
                            <th style="width:40%">Description</th>
                            <th style="width:10%; text-align: right">Debit</th>
                            <th style="width:10%; text-align: right">Credit</th>
                            <th style="width:10%; text-align: right">Balance</th>
                            <!--CASH BOOK ADD BUTTON-->
                            <th style="width:10%; text-align: right">
                                <button class="btn btn-primary float-end" type="Submit" id="btnAdd" 
                                    asp-page-handler="Add">
                                    ADD
                                </button>
                            </th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (DataRow _Row in Model.Cashbook.Rows)
                        {
                            <tr>
                                <td>@DateTime.Parse(_Row["Vou_Date"].ToString()).ToString(DateFormat)</td>
                                <td>@_Row["Vou_No"].ToString()</td>
                                <td>@_Row["Description"].ToString()</td>
                                <td style="text-align: right">@decimal.Parse(_Row["DR"].ToString()).ToString(NumFormat)</td>
                                <td style="text-align: right">@decimal.Parse(_Row["CR"].ToString()).ToString(NumFormat)</td>

                                @if (decimal.Parse(_Row["BAL"].ToString()) > 0)
                                {
                                    <td class="align-right">@decimal.Parse(_Row["BAL"].ToString()).ToString(NumFormat)</td>
                                }
                                else
                                {
                                    <td class="text-danger align-right">@decimal.Parse(_Row["BAL"].ToString()).ToString(NumFormat)</td>
                                }
                                <td>
                                    <a asp-page="CashBookRecord" asp-route-id=@_Row["ID"]  asp-page-handler="Edit"> Edit</a> |
                                    <a asp-page="CashBookRecord" asp-route-id=@_Row["ID"] asp-page-handler="Delete"> Delete</a>
                                </td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        }
    </div>
</form>
